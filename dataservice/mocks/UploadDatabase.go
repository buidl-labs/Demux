// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	model "github.com/buidl-labs/Demux/model"
	mock "github.com/stretchr/testify/mock"
)

// UploadDatabase is an autogenerated mock type for the UploadDatabase type
type UploadDatabase struct {
	mock.Mock
}

// GetUpload provides a mock function with given fields: _a0
func (_m *UploadDatabase) GetUpload(_a0 string) (model.Upload, error) {
	ret := _m.Called(_a0)

	var r0 model.Upload
	if rf, ok := ret.Get(0).(func(string) model.Upload); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(model.Upload)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IfUploadExists provides a mock function with given fields: _a0
func (_m *UploadDatabase) IfUploadExists(_a0 string) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// InsertUpload provides a mock function with given fields: _a0
func (_m *UploadDatabase) InsertUpload(_a0 model.Upload) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.Upload) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateUploadStatus provides a mock function with given fields: _a0, _a1
func (_m *UploadDatabase) UpdateUploadStatus(_a0 string, _a1 bool) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, bool) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
